----------------------------------------------------------------------
1.  Overview
----------------------------------------------------------------------

a.  Opencpn was built with the following objectives in mind.

    i.   Intended use as primary navigation interface for vessels
         with full-time helm-visible navigational suites.
         Other tools may be better for offline route planning, tide
         and current prediction, online logging, etc.
    ii.  Quick startup and shutdown.
    iii. Those and only those toolbar buttons really needed for
         daily operation.
    iv.  Portability, thus wxWidgets core components.  Currently
         tested and in production use on W98, XP, OS X, and Linux.
    v.   Conventional ( i.e. popular and modern ) chart format
         support.  In the real world, this means BSB format raster
         charts, and S57ENC format vector charts.



        And, of course, opencpn is all GPL'ed (or equivalent)
                        Open Source code.


    Personal Note:
    Opencpn is in primary daily use as the navigation package aboard
    M/V Dyad, a 48 ft trawler yacht cruising from Newfoundland to the
    Bahamas yearly.
----------------------------------------------------------------------
2. Eigene Bemerkungen
----------------------------------------------------------------------
Warum überhaupt diese eigene OpenCPN Version?
  Zunächst gab es jahrelang überhaupt keine Version für Mac OS X.
  Es war mühsam aufgrund früherer Versuche den Quellcode für OS X zu
  kompilieren. Die daraus gewonnenen Erkenntnisse wollten die Programmierer
  von OpenCPN zunächst nicht übernehmen. Erst später wurde dann erkannt,
  daß z.B. nur neuere Versionen von wxWidgets für Mac OS X verwendet
  werden können und daß z.B. eine Steuerung über Menüs doch nicht so
  schlecht ist. Viele Texte im Quellcode waren nicht übersetzbar und
  das Hilfesystem wie auch andere Funktionen entsprachen nicht dem bei
  Apple gewohnten Umfeld. Weitere Abweichungen zum Original Code sind:

a. Diese Version von OCPN ist eine rein deutsche Version für Mac OS X
   El Capitan (10.11) Ältere Versionen funktionieren nicht mehr. Es soll
   soweit wie möglich das Mac OS X Betriebssystem unterstützt werden,
   einschl. Mac Menüs, Mac Hilfe usw. El Capitan (10.11) wird ab
   Erscheinen Ende September 2015 nur noch unterstützt, ältere Versionen
   nicht mehr.

b. Diese Version basiert auf Release-Version von wxWidgets 3.1.1 mit
   entsprechenden dylibs vom 21. März 2016. Die Einbindung der Libs als
   statisch wurde verworfen, da damit das Gesamt-Paket unnötig aufgebläht
   werden würde.

c. In einem weiteren Schritt wurde mit Veröffentlichung einer Binär-Version
   von OCPN für Mac ein automatischer Update-Service mit Sparkle eingeführt.

d. Nicht alle Plugins laufen bisher problemlos. Einige wurden noch nicht
   compiliert, andere haben noch Fehler.

e. Außer dem o.g. Problem, wegen der Plugins nur die dynamischen Libraries von
   wxWidgets zu verwenden, hat das Plugin-Konzept noch weitere Nachteile
   offenbart: Zur Laufzeit werden die verschiedenen Locale-Dateien von OCPN
   und den Plugins verbunden, so daß gleichartige Strings mit unterschiedlichen
   Übersetzungen zu Fehlern führen.

f. Das von den OCPN Programmierern gewünschte Konzept, die Plugins als
   Stand-Alone zu compilieren, wurde wieder verlassen, da es zu größeren
   Plugin Dateien führt und nur Vorteile bietet, wenn Plugins mit verschiedenen
   OCPN Versionen laufen sollen. Außerdem wird es umständlicher, Code-
   Änderungen an mehreren Stellen nachzuhalten wie z.B. bei den wxJSON
   Dateien.

Größte Änderung ist jedoch die Verwendung von Clang/LLVM mit Xcode statt
der Befehlszeilen orientierten Cmake Version.

Compiler:
Xcode 7.3.1
Apple LLVM version 7.0.2 (clang-700.1.81) (based on LLVM 3.6.0svn)
Target: x86_64-apple-darwin15.3.0
SDK 10.11.5 El Capitan
Thread model: posix

wxWidgets Direktive:
Sourcen holen von https://github.com/wxWidgets/wxWidgets.git branch master
Ich verwende die SourceTree.app für Mac OS X.

Im Sourcen-Tree neues Verzeichnis erstellen z.B. "build-cocoa-debug".
Im Terminal in dies Verzeichnis wechseln und konfigurieren mit:

../configure --with-osx_cocoa --enable-debug --enable-shared --with-macosx-sdk=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk --with-macosx-version-min=10.10 --enable-mimetype=yes

Dann Eingabe von: make
und schließlich Eingabe von: sudo make install

Die dylibs und Header werden installiert in: /usr/local/Lib/
bzw. /usr/local/include/wx-3.1

Um eine eigenständige OpenCPN-Version zu erhalten, müssen OpenCPN und die
dylibs (im Contents/Frameworks/ Verzeichnis bzw. Contents/Plugins/ Verzeichnis)
mit "install_name_tool -change" bearbeitet werden!
Siehe batchwx.sh bzw. Xcode Scripts.

wxCurl wurde auf diese Art ebenfalls als dynamische Library compiliert.
-----------------------------------------------------------------------
18. Mai 2016


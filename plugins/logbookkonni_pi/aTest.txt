    if( bGPSValid ) {
        wxString data;
        data.Printf( _T("OFF: Lat %10.5f Lon %10.5f "), gLat, gLon );
        navmsg += data;

        wxString cog;
        if( wxIsNaN(gCog) ) cog.Printf( _T("COG ----- ") );
        else
            cog.Printf( _T("COG %10.5f "), gCog );

        wxString sog;
        if( wxIsNaN(gSog) ) sog.Printf( _T("SOG -----  ") );
        else
            sog.Printf( _T("SOG %6.2f"), gSog );

        navmsg += cog;
        navmsg += sog;

    } else {
        wxString data;
        data.Printf( _T("OFF: Lat %10.5f Lon %10.5f"), gLat, gLon );
        navmsg += data;
    }



	m_gridMaintenanceBuyParts->SetDefaultCellAlignment( wxALIGN_LEFT, wxALIGN_TOP );
	m_menu711 = new wxMenu();
	wxMenuItem* m_menuItem1311;
	m_menuItem1311 = new wxMenuItem( m_menu711, wxID_ANY, wxString( _("Delete Row") ) , wxEmptyString, wxITEM_NORMAL );
	m_menu711->Append( m_menuItem1311 );
// MenÃ¼ ist GANZ unten???


this->Connect( m_menuItem1311->GetId(), wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler( LogbookDialog::onMenuSelectionBuyPartsDelete ) );



	m_panel8 = new wxPanel( m_splitter1, wxID_ANY, wxDefaultPosition, wxSize( -1,-1 ), wxTAB_TRAVERSAL );

	sbSizer12 = new wxStaticBoxSizer( new wxStaticBox( m_panel8, wxID_ANY, _("Equipment") ), wxVERTICAL );

	sbSizer12->SetMinSize( wxSize( -1,-1 ) ); 

	m_gridEquipment = new wxGrid( m_panel8, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0 );
	
	// Grid
	m_gridEquipment->CreateGrid( 0, 4 );
	m_gridEquipment->EnableEditing( true );
	m_gridEquipment->EnableGridLines( true );
	m_gridEquipment->EnableDragGridSize( false );
	m_gridEquipment->SetMargins( 0, 0 );
	
	// Columns
	m_gridEquipment->SetColSize( 0, 120 );
	m_gridEquipment->SetColSize( 1, 296 );
	m_gridEquipment->SetColSize( 2, 151 );
	m_gridEquipment->SetColSize( 3, 297 );
	m_gridEquipment->EnableDragColMove( false );
	m_gridEquipment->EnableDragColSize( true );
	m_gridEquipment->SetColLabelSize( 30 );
	m_gridEquipment->SetColLabelValue( 0, _("Type") );
	m_gridEquipment->SetColLabelValue( 1, _("Description") );
	m_gridEquipment->SetColLabelValue( 2, _("Serial-Nr.") );
	m_gridEquipment->SetColLabelValue( 3, _("Remarks") );
	m_gridEquipment->SetColLabelAlignment( wxALIGN_CENTRE, wxALIGN_CENTRE );
	
	// Rows
	m_gridEquipment->EnableDragRowSize( true );
	m_gridEquipment->SetRowLabelSize( 30 );
	m_gridEquipment->SetRowLabelAlignment( wxALIGN_CENTRE, wxALIGN_CENTRE );
	
	// Label Appearance
	
	// Cell Defaults
	m_gridEquipment->SetDefaultCellAlignment( wxALIGN_LEFT, wxALIGN_TOP );
	m_menu3 = new wxMenu();
	wxMenuItem* m_menuItem3;
	m_menuItem3 = new wxMenuItem( m_menu3, wxID_ANY, wxString( _("Delete Row") ) , wxEmptyString, wxITEM_NORMAL );
	m_menu3->Append( m_menuItem3 );
	
	
	sbSizer12->Add( m_gridEquipment, 1, wxALL|wxEXPAND, 5 );
	
	m_panel8->SetSizer( sbSizer12 );
	m_panel8->Layout();
	sbSizer12->Fit( m_panel8 );
	
	m_splitter1->SplitHorizontally( m_panel72, m_panel8, 315 );


this->Connect( m_menuItem3->GetId(), wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler( LogbookDialog::m_menuItem3OnMenuSelection ) );

	boat->deleteRow(selGridRow);
	boat->modified = true;



// Cell Defaults
	m_gridGlobal->SetDefaultCellAlignment( wxALIGN_RIGHT, wxALIGN_TOP );
	m_menu1 = new wxMenu();
	wxMenuItem* m_menuItem1;
	m_menuItem1 = new wxMenuItem( m_menu1, 500, wxString( _("Delete Row") ) , wxEmptyString, wxITEM_NORMAL );
	m_menu1->Append( m_menuItem1 );
	
	m_menu1->AppendSeparator();
	
	wxMenuItem* m_menuItem132;
	m_menuItem132 = new wxMenuItem( m_menu1, 503, wxString( _("Show hidden columns") ) , wxEmptyString, wxITEM_NORMAL );
	m_menu1->Append( m_menuItem132 );
	
	wxMenuItem* m_menuItem15;
	m_menuItem15 = new wxMenuItem( m_menu1, 506, wxString( _("Hide column") ) , wxEmptyString, wxITEM_NORMAL );
	m_menu1->Append( m_menuItem15 );
	
	wxMenuItem* m_menuItemSearch;
	m_menuItemSearch = new wxMenuItem( m_menu1, wxID_ANY, wxString( _("Search in Logbook") ) , wxEmptyString, wxITEM_NORMAL );
	m_menu1->Append( m_menuItemSearch );
	
	m_menu1->AppendSeparator();
	
	wxMenuItem* m_menuItemShutDown;
	m_menuItemShutDown = new wxMenuItem( m_menu1, wxID_ANY, wxString( _("Shutdown Logbook") ) , wxEmptyString, wxITEM_NORMAL );
	m_menu1->Append( m_menuItemShutDown );
	
	m_gridGlobal->Connect( wxEVT_RIGHT_DOWN, wxMouseEventHandler( LogbookDialog::m_gridGlobalOnContextMenu ), NULL, this ); 
	


http://localhost/~heidi/wxDoc295/overview_sizer.html#overview_sizer_box